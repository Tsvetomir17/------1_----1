#ifndef __MENU_HPP
#define __MENU_HPP

#include "Travel.hpp"
#include "User.hpp"

/// Константа, която се използва, когато е нужно взимането на цялата информация за даден потребител
const size_t MAX_TEMP_ROW = 200;

/// Този клас се отнася за това как изглежда менюто и работата на цялата програма
/// 
/// Класът приема като параметри числа, според които потребителят избира на къде да продължи в даденото меню на програмата
class Menu
{
private:

    /// Променлива за избора на потребителя в първото меню на програмата
    int choice;

    /// Променлива за избора на потребителя във второто меню на програмата
    int choiceAfterLogIn;

    /// Масив, който запазва името на потребителя, който в момента работи с второто меню
    char username[MAX_LENGTH];

    /// Масив, който запазва името на файла на потребителя, който в момента работи с второто меню
    char fileName[MAX_LENGTH + 4];

public:

    /// Конструктор по подразбиране
    Menu();

    /// Мутатор, чрез който се запазва името на потребителя, който в момента работи с второто меню
    void saveUsername(const char* username);
    
    /// Проверява дали потребителят е въвел правилно число за работа в първото меню
    ///
    /// Ако потребителят въведен правилно число, то проверката приключва. В противен случай, излиза подходящо съобщение за грешно въвеждане 
    /// и отново чака потребителят да въведен правилно число
    void checkInputChoice(int userChoice);

    /// Проверява дали потребителят е въвел правилно число за работа във второто меню
    ///
    /// Ако потребителят въведен правилно число, то проверката приключва. В противен случай, излиза подходящо съобщение за грешно въвеждане 
    /// и отново чака потребителят да въведен правилно число
    void checkInputChoiceAfterLogIn(int userChoice);

    /// Първото меню на програмата
    ///
    /// @return Функцията връща променливата choiceAfterLogIn. След изпълнение на menuFirst(), стойността на choiceAfterLogIn е 0 или -1.
    /// След като menuFirst() приключи, ако стойността на choiceAfterLogIn е 0, то програмата приключва. Ако стойнстта на choiceAfterLogIn
    /// е -1, то програмата отваря menuSecond()
    int menuFirst();

    /// Второто меню на програмата
    ///
    /// Функцията отваря второто меню на програмата. Функцията е от тип int, защото вътре в нея се отварят файлове и при грешно отворен файл да може да върне единица
    int menuSecond(int choiceAfterLogIn);

    /// Селектор за оценката на дадено пътуване
    ///
    /// @param arr Приема цялата информация за дадено пътуване под формата на масив
    /// @return Връща оценката като цяло число
    int getRating(const char* arr);

    /// Извежда информацията за първото меню на програмата
    void printMenuFirst() const;

    /// Извежда информация за второто меню на програмата
    void printMenuSecond() const;
};

#endif